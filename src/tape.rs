// does it look to you like I have time?
pub fn create_tape(key: [u8; 31]) -> [u8; 406] {
    let mut stackstr = [0; 406];

    stackstr[0] = 2; // case 0
    stackstr[1] = key[0];
    stackstr[2] = 0;
    stackstr[3..10].copy_from_slice(b"\x01\r\x01\t\x03\x01\x02");
    stackstr[10] = key[1];
    stackstr[11] = 0;
    stackstr[12..19].copy_from_slice(b"\x02\x0E\x02\x04\x03\x02\x02");
    stackstr[19] = key[2];
    stackstr[20] = 0;
    stackstr[21..28].copy_from_slice(b"\x01\n\x01 \x03\x01\x02");
    stackstr[28] = key[3];
    stackstr[29] = 0;
    stackstr[30] = 3;
    stackstr[31] = 12;
    stackstr[32] = 3;
    stackstr[33] = 3;
    stackstr[34] = 3;
    stackstr[35] = 3;
    stackstr[36] = 2;
    stackstr[37] = key[4];
    stackstr[38] = 0;
    stackstr[39] = 4;
    stackstr[40] = 11;
    stackstr[41] = 4;
    stackstr[42] = 5;
    stackstr[43] = 3;
    stackstr[44] = 4;
    stackstr[45] = 2;
    stackstr[46] = key[5]; //// prolly pwned{/pwnEd{ till here
    stackstr[47] = 0;
    stackstr[48] = 1;
    stackstr[49] = 13;
    stackstr[50] = 1;
    stackstr[51] = 9;
    stackstr[52] = 10;
    stackstr[53] = 1;
    stackstr[54] = 48;
    stackstr[55] = 3;
    stackstr[56] = 1;
    stackstr[57] = 2;
    stackstr[58] = key[6];
    stackstr[59] = 0;
    stackstr[60] = 2;
    stackstr[61] = 16;
    stackstr[62] = 2;
    stackstr[63] = 16;
    stackstr[64] = 2;
    stackstr[65] = 14;
    stackstr[66] = 2;
    stackstr[67] = 5;
    stackstr[68] = 12;
    stackstr[69] = 2;
    stackstr[70] = 3;
    stackstr[71] = 3;
    stackstr[72] = 2;
    stackstr[73] = 2;
    stackstr[74] = key[7];
    stackstr[75] = 0;
    stackstr[76] = 1;
    stackstr[77] = 15;
    stackstr[78] = 1;
    stackstr[79] = 1;
    stackstr[80] = 13;
    stackstr[81] = 1;
    stackstr[82] = 3;
    stackstr[83] = 3;
    stackstr[84] = 1;
    stackstr[85] = 2;
    stackstr[86] = key[8];
    stackstr[87] = 0;
    stackstr[88] = 4;
    stackstr[89] = 10;
    stackstr[90] = 4;
    stackstr[91] = 66;
    stackstr[92] = 3;
    stackstr[93] = 4;
    stackstr[94] = 2;
    stackstr[95] = key[9];
    stackstr[96] = 0;
    stackstr[97] = 3;
    stackstr[98] = 10;
    stackstr[99] = 3;
    stackstr[100] = 33;
    stackstr[101] = 3;
    stackstr[102] = 3;
    stackstr[103] = 2;
    stackstr[104] = key[10];
    stackstr[105] = 0;
    stackstr[106] = 2;
    stackstr[107] = 10;
    stackstr[108] = 2;
    stackstr[109] = 34;
    stackstr[110] = 12;
    stackstr[111] = 2;
    stackstr[112] = 3;
    stackstr[113] = 10;
    stackstr[114] = 2;
    stackstr[115] = 80;
    stackstr[116] = 3;
    stackstr[117] = 2;
    stackstr[118] = 2;
    stackstr[119] = key[11];
    stackstr[120] = 0;
    stackstr[121] = 1;
    stackstr[122] = 11;
    stackstr[123] = 1;
    stackstr[124] = 4;
    stackstr[125] = 6;
    stackstr[126] = 3;
    stackstr[127] = 1;
    stackstr[128] = 10;
    stackstr[129] = 3;
    stackstr[130] = 16;
    stackstr[131] = 3;
    stackstr[132] = 3;
    stackstr[133] = 2;
    stackstr[134] = key[12];
    stackstr[135] = 0;
    stackstr[136] = 2;
    stackstr[137] = 6;
    stackstr[138] = 1;
    stackstr[139] = 2;
    stackstr[140] = 13;
    stackstr[141] = 1;
    stackstr[142] = 5;
    stackstr[143] = 6;
    stackstr[144] = 2;
    stackstr[145] = 1;
    stackstr[146] = 13;
    stackstr[147] = 2;
    stackstr[148] = 5;
    stackstr[149] = 3;
    stackstr[150] = 2;
    stackstr[151] = 2;
    stackstr[152] = key[13];
    stackstr[153] = 0;
    stackstr[154] = 4;
    stackstr[155] = 13;
    stackstr[156] = 4;
    stackstr[157] = 10;
    stackstr[158] = 14;
    stackstr[159] = 4;
    stackstr[160] = 10;
    stackstr[161] = 16;
    stackstr[162] = 4;
    stackstr[163] = 3;
    stackstr[164] = 4;
    stackstr[165] = 2;
    stackstr[166] = key[14];
    stackstr[167] = 0;
    stackstr[168] = 1;
    stackstr[169] = 10;
    stackstr[170] = 1;
    stackstr[171] = 32;
    stackstr[172] = 2;
    stackstr[173] = key[15];
    stackstr[174] = 0;
    stackstr[175] = 3;
    stackstr[176] = 10;
    stackstr[177] = 3;
    stackstr[178] = 32;
    stackstr[179] = 2;
    stackstr[180] = key[16];
    stackstr[181] = 0;
    stackstr[182] = 4;
    stackstr[183] = 10;
    stackstr[184] = 4;
    stackstr[185] = 32;
    stackstr[186] = 3;
    stackstr[187] = 1;
    stackstr[188] = 6;
    stackstr[189] = 2;
    stackstr[190] = 4;
    stackstr[191] = 3;
    stackstr[192] = 3;
    stackstr[193] = 3;
    stackstr[194] = 2;
    stackstr[195] = 2;
    stackstr[196] = key[17];
    stackstr[197] = 0;
    stackstr[198] = 1;
    stackstr[199] = 6;
    stackstr[200] = 4;
    stackstr[201] = 1;
    stackstr[202] = 6;
    stackstr[203] = 3;
    stackstr[204] = 4;
    stackstr[205] = 10;
    stackstr[206] = 3;
    stackstr[207] = 2;
    stackstr[208] = 6;
    stackstr[209] = 1;
    stackstr[210] = 3;
    stackstr[211] = 6;
    stackstr[212] = 4;
    stackstr[213] = 1;
    stackstr[214] = 3;
    stackstr[215] = 3;
    stackstr[216] = 2;
    stackstr[217] = key[18];
    stackstr[218] = 0;
    stackstr[219] = 2;
    stackstr[220] = 12;
    stackstr[221] = 2;
    stackstr[222] = 3;
    stackstr[223] = 3;
    stackstr[224] = 2;
    stackstr[225] = 2;
    stackstr[226] = key[19];
    stackstr[227] = 0;
    stackstr[228] = 3;
    stackstr[229] = 11;
    stackstr[230] = 3;
    stackstr[231] = 7;
    stackstr[232] = 3;
    stackstr[233] = 3;
    stackstr[234] = 2;
    stackstr[235] = key[20];
    stackstr[236] = 0;
    stackstr[237] = 2;
    stackstr[238] = 14;
    stackstr[239] = 2;
    stackstr[240] = 5;
    stackstr[241] = 16;
    stackstr[242] = 2;
    stackstr[243] = 3;
    stackstr[244] = 2;
    stackstr[245] = 2;
    stackstr[246] = key[21];
    stackstr[247] = 0;
    stackstr[248] = 3;
    stackstr[249] = 13;
    stackstr[250] = 3;
    stackstr[251] = 2;
    stackstr[252] = 6;
    stackstr[253] = 4;
    stackstr[254] = 3;
    stackstr[255] = 10;
    stackstr[256] = 4;
    stackstr[257] = 114;
    stackstr[258] = 6;
    stackstr[259] = 3;
    stackstr[260] = 4;
    stackstr[261] = 10;
    stackstr[262] = 3;
    stackstr[263] = 114;
    stackstr[264] = 3;
    stackstr[265] = 4;
    stackstr[266] = 2;
    stackstr[267] = key[22];
    stackstr[268] = 0;
    stackstr[269] = 1;
    stackstr[270] = 13;
    stackstr[271] = 1;
    stackstr[272] = 2;
    stackstr[273] = 12;
    stackstr[274] = 1;
    stackstr[275] = 5;
    stackstr[276] = 3;
    stackstr[277] = 1;
    stackstr[278] = 2;
    stackstr[279] = key[23];
    stackstr[280] = 0;
    stackstr[281] = 2;
    stackstr[282] = 13;
    stackstr[283] = 2;
    stackstr[284] = 5;
    stackstr[285] = 3;
    stackstr[286] = 2;
    stackstr[287] = 2;
    stackstr[288] = key[24];
    stackstr[289] = 0;
    stackstr[290] = 4;
    stackstr[291] = 10;
    stackstr[292] = 4;
    stackstr[293] = 5;
    stackstr[294] = 3;
    stackstr[295] = 4;
    stackstr[296] = 2;
    stackstr[297] = key[25];
    stackstr[298] = 0;
    stackstr[299] = 1;
    stackstr[300] = 12;
    stackstr[301] = 1;
    stackstr[302] = 0;
    stackstr[303] = 16;
    stackstr[304] = 1;
    stackstr[305] = 3;
    stackstr[306] = 1;
    stackstr[307] = 2;
    stackstr[308] = key[26];
    stackstr[309] = 0;
    stackstr[310] = 3;
    stackstr[311] = 11;
    stackstr[312] = 3;
    stackstr[313] = 1;
    stackstr[314] = 3;
    stackstr[315] = 3;
    stackstr[316] = 2;
    stackstr[317] = key[27];
    stackstr[318] = 0;
    stackstr[319] = 2;
    stackstr[320] = 10;
    stackstr[321] = 2;
    stackstr[322] = 51;
    stackstr[323] = 6;
    stackstr[324] = 3;
    stackstr[325] = 2;
    stackstr[326] = 3;
    stackstr[327] = 3;
    stackstr[328] = 2;
    stackstr[329] = key[28];
    stackstr[330] = 0;
    stackstr[331] = 3;
    stackstr[332] = 10;
    stackstr[333] = 3;
    stackstr[334] = 51;
    stackstr[335] = 6;
    stackstr[336] = 4;
    stackstr[337] = 3;
    stackstr[338] = 11;
    stackstr[339] = 4;
    stackstr[340] = 4;
    stackstr[341] = 6;
    stackstr[342] = 3;
    stackstr[343] = 4;
    stackstr[344] = 6;
    stackstr[345] = 1;
    stackstr[346] = 3;
    stackstr[347] = 10;
    stackstr[348] = 1;
    stackstr[349] = 50;
    stackstr[350] = 10;
    stackstr[351] = 3;
    stackstr[352] = 51;
    stackstr[353] = 3;
    stackstr[354] = 3;
    stackstr[355] = 2;
    stackstr[356] = key[29];
    stackstr[357] = 0;
    stackstr[358] = 1;
    stackstr[359] = 13;
    stackstr[360] = 1;
    stackstr[361] = 5;
    stackstr[362] = 3;
    stackstr[363] = 1;
    stackstr[364] = 2;
    stackstr[365] = key[30];
    stackstr[366] = 0;
    stackstr[367] = 1;
    stackstr[368] = 12;
    stackstr[369] = 1;
    stackstr[370] = 3;
    stackstr[371] = 16;
    stackstr[372] = 1;
    stackstr[373] = 16;
    stackstr[374] = 1;
    stackstr[375] = 3;
    stackstr[376] = 1;
    stackstr[377] = 2;
    stackstr[378] = 31;
    stackstr[379] = 0;
    stackstr[380] = 1;
    stackstr[381] = 2;
    stackstr[382] = 0;
    stackstr[383] = 0;
    stackstr[384] = 2;
    stackstr[385] = 5;
    stackstr[386] = 1;
    stackstr[387] = 2;
    stackstr[388] = 7; // we need to hijack this, perhaps??
    stackstr[389] = 17;
    stackstr[390] = 0;
    stackstr[391] = 3;
    stackstr[392] = 1;
    stackstr[393] = 4;
    stackstr[394] = 5;
    stackstr[395] = 3;
    stackstr[396] = 4;
    // jump on x11 and quit??
    // jump to 0x08 and hijack?
    stackstr[397..].copy_from_slice(b"\x08\x07\x0E\x01\x01\t\x11\x04\x12");

    stackstr
}
